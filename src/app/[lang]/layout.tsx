import { Locale, i18n } from "@/shared/lib/i18n";
import { sGlobal } from "@/shared/style";
import { HeaderModule } from "@/widget/header";
import clsx from "clsx";
import type { Metadata } from "next";
import { Montserrat } from "next/font/google";
import { ProvidersRoot } from "../../shared/provider/root.provider";
import { notFound, redirect } from "next/navigation";
import { setRequestLocale } from "next-intl/server";
import BaseLayout from "@/shared/ui/layout/ui/base.layout";

const MontserratSans = Montserrat({
  variable: "--font-montserrat-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: Promise<{ lang: Locale }>;
}

export function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

const RootLayout = async ({ children, params }: RootLayoutProps) => {
  const lang = (await params).lang;

  if (!i18n.locales.includes(lang as any)) {
    notFound();
  }
  return <BaseLayout lang={lang}>{children}</BaseLayout>;
};

export default RootLayout;
