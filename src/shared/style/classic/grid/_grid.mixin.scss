@use "sass:map";

// Переменные для брейкпоинтов
$breakpoints: (
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1280px,
  "xxl": 1440px,
);
$max-width-site: 1440px;

// Количество колонок в сетке
$grid-columns: 12;

// Базовый отступ между колонками
$grid-gap: 20px;

// Миксины для медиа-запросов
// Mobile first (min-width)
@mixin breakpoint($point) {
  @if map.has-key($breakpoints, $point) {
    @media (min-width: map.get($breakpoints, $point)) {
      @content;
    }
  }
}

// Desktop first (max-width)
@mixin breakpoint-down($point) {
  @if map.has-key($breakpoints, $point) {
    @media (max-width: map.get($breakpoints, $point)) {
      @content;
    }
  }
}

// Миксины для удобного применения стилей на брейкпоинтах
@mixin block-bp-sm() {
  @include breakpoint("sm") {
    @content;
  }
}

@mixin block-bp-md() {
  @include breakpoint("md") {
    @content;
  }
}

@mixin block-bp-lg() {
  @include breakpoint("lg") {
    @content;
  }
}

@mixin block-bp-xl() {
  @include breakpoint("xl") {
    @content;
  }
}

@mixin block-bp-xxl() {
  @include breakpoint("xxl") {
    @content;
  }
}

// Desktop first variants
@mixin block-bp-sm-down() {
  @include breakpoint-down("sm") {
    @content;
  }
}

@mixin block-bp-md-down() {
  @include breakpoint-down("md") {
    @content;
  }
}

@mixin block-bp-lg-down() {
  @include breakpoint-down("lg") {
    @content;
  }
}

@mixin block-bp-xl-down() {
  @include breakpoint-down("xl") {
    @content;
  }
}

@mixin block-bp-xxl-down() {
  @include breakpoint-down("xxl") {
    @content;
  }
}

// Контейнер с отступами и центровкой
@mixin container($center: true, $max-width: $max-width-site) {
  max-width: $max-width;

  @if $center {
    margin-right: auto;
    margin-left: auto;
  }

  @include box;
}

@mixin container-flat($center: true, $max-width: $max-width-site) {
  max-width: $max-width;

  @if $center {
    margin-right: auto;
    margin-left: auto;
  }
}

@mixin container-full($center: true) {
  @include box;
}

@mixin box() {
  padding-right: $grid-gap;
  padding-left: $grid-gap;
}

// Миксин для создания grid-контейнера
@mixin grid($gap: $grid-gap) {
  & {
    display: grid;
    grid-template-columns: repeat($grid-columns, 1fr);
    gap: $gap;

    width: 100%;
  }
}

@mixin grid-flat($gap: $grid-gap) {
  & {
    display: grid;
    grid-template-columns: repeat($grid-columns, 1fr);

    width: 100%;
  }
}

// Миксин для колонок (базовый)
@mixin col($span: $grid-columns) {
  grid-column: span min($span, $grid-columns);
}

@mixin col-flat($span: $grid-columns) {
  grid-column: span min($span, $grid-columns);

  padding-right: $grid-gap;
  padding-left: $grid-gap;
}

// Миксины для разных брейкпоинтов
@mixin col-sm($span) {
  @include breakpoint("sm") {
    @include col($span);
  }
}

@mixin col-md($span) {
  @include breakpoint("md") {
    @include col($span);
  }
}

@mixin col-lg($span) {
  @include breakpoint("lg") {
    @include col($span);
  }
}

@mixin col-xl($span) {
  @include breakpoint("xl") {
    @include col($span);
  }
}

@mixin col-xxl($span) {
  @include breakpoint("xxl") {
    @include col($span);
  }
}

// Миксины для col-flat с брейкпоинтами
@mixin col-sm-flat($span) {
  @include breakpoint("sm") {
    @include col-flat($span);
  }
}

@mixin col-md-flat($span) {
  @include breakpoint("md") {
    @include col-flat($span);
  }
}

@mixin col-lg-flat($span) {
  @include breakpoint("lg") {
    @include col-flat($span);
  }
}

@mixin col-xl-flat($span) {
  @include breakpoint("xl") {
    @include col-flat($span);
  }
}

@mixin col-xxl-flat($span) {
  @include breakpoint("xxl") {
    @include col-flat($span);
  }
}

// Миксин для автоматического размещения элементов в строку
@mixin grid-auto-fit($min-size: 250px, $gap: $grid-gap) {
  display: grid;
  gap: $gap;
  grid-template-columns: repeat(auto-fit, minmax(min($min-size, 100%), 1fr));
}

// Миксин для создания grid-area
@mixin grid-area($name) {
  grid-area: $name;
}

// Миксин для создания именованной сетки
@mixin grid-template($areas...) {
  & {
    grid-template-areas: $areas;
  }
}

// Миксин для выравнивания элементов внутри грида
@mixin grid-align($justify: start, $align: start) {
  place-items: $align $justify;
}
