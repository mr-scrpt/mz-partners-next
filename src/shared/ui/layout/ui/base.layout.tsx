import { Locale, i18n } from "@/shared/lib/i18n";
import { ProvidersRoot } from "@/shared/provider/root.provider";
import { sGlobal } from "@/shared/style";
import { HeaderModule } from "@/widget/header";
import clsx from "clsx";
import type { Metadata } from "next";
import { Montserrat } from "next/font/google";

const MontserratSans = Montserrat({
  variable: "--font-montserrat-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  lang: Locale;
}

export function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

const RootLayout = async ({ children, lang }: RootLayoutProps) => {
  return (
    <html
      lang={lang}
      className={clsx(sGlobal.html, sGlobal.reset, sGlobal.color)}
    >
      <body className={`${MontserratSans.variable}`}>
        <ProvidersRoot>
          <HeaderModule />
          {children}
        </ProvidersRoot>
      </body>
    </html>
  );
};

export default RootLayout;
